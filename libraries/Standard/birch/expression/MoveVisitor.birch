/**
 * Move arguments in a delayed expression.
 *
 * @param x Vectorized arguments.
 */
final class MoveVisitor(x:Real[_]) {
  /**
   * Vectorized arguments.
   */
  x:Real[_] <- x;

  function visit(p:Distribution<Real>) {
    let m <- p.offset + 1;
    cpp{{
    p->x = x.slice(m);
    }}
  }

  function visit(p:Distribution<Real[_]>) {
    let m <- p.offset + 1;
    let n <- m + size(p.x!) - 1;
    p.x <- x[m..n];
  }

  function visit(p:Distribution<Real[_,_]>) {
    let m <- p.offset + 1;
    let n <- m + size(p.x!) - 1;
    p.x <- mat(x[m..n], columns(p.x!));
  }

  function visit<Value>(p:Distribution<Value>) {
    // ignore
  }
}
