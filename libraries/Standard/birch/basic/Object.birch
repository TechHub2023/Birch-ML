/**
 * Root class of all other classes.
 */
abstract class Object {
  /**
   * Read.
   *
   * @param buffer Input buffer.
   */
  function read(buffer:Buffer) {
    //
  }

  /**
   * Write.
   *
   * @param buffer Output buffer.
   */
  function write(buffer:Buffer) {
    //
  }

  /**
   * Sequential read.
   *
   * @param t Step number.
   * @param buffer Input buffer.
   */
  function read(t:Integer, buffer:Buffer) {
    //
  }

  /**
   * Sequential write.
   *
   * @param t Step number.
   * @param buffer Output buffer.
   */
  function write(t:Integer, buffer:Buffer) {
    //
  }
}

/**
 * Identity comparison.
 */
operator (x:Object == y:Object) -> Boolean {
  cpp{{
  return x.get() == y.get();
  }}
}

/**
 * Identity comparison.
 */
operator (x:Object != y:Object) -> Boolean {
  return !(x == y);
}
