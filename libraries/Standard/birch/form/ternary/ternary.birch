
/**
 * Element of a matrix.
 * 
 * @param A Matrix.
 * @param i Row index.
 * @param j Column index.
 * 
 * @return Element.
 */
function element(x:NumberMatrixLike, i:IntegerScalarLike,
    j:IntegerScalarLike) -> NumberScalarLike;

/**
 * Matrix gather.
 */
function gather(A:NumberMatrixLike, I:IntegerMatrixLike,
    J:IntegerMatrixLike) -> NumberMatrixLike;

/**
 * Matrix scatter.
 */
function scatter(A:NumberMatrixLike, I:IntegerMatrixLike,
    J:IntegerMatrixLike, m:Integer, n:Integer) -> NumberMatrixLike;

/**
 * Construct single-entry matrix. A given element of the matrix has a given
 * value, all others are zero.
 * 
 * @param x Value of single entry.
 * @param i Row of single entry.
 * @param j Column of single entry.
 * @param m Number of rows.
 * @param n Number of columns.
 * 
 * @return Single-entry matrix.
 */
function single(x:NumberScalarLike, i:IntegerScalarLike, j:IntegerScalarLike,
    m:Integer, n:Integer) -> NumberMatrixLike;

/**
 * Conditional.
 * 
 * @param x Argument.
 * @param y Argument.
 * @param z Argument.
 * 
 * @return Where @p x is true, elements of @p y, elsewhere elements of @p z.
 */
function where(x:NumericLike, y:NumericLike, z:NumericLike) -> NumericLike;
