/**
 * Particle for use with ParticleFilter.
 *
 * - m: Model.
 *
 * ```mermaid
 * classDiagram
 *    Particle <|-- MoveParticle
 *    Particle <|-- ConditionalParticle
 *    link Particle "../Particle/"
 *    link MoveParticle "../MoveParticle/"
 *    link ConditionalParticle "../ConditionalParticle/"
 * ```
 */
class Particle(m:Model) {
  /**
   * State.
   */
  m:Model <- m;

  override function read(buffer:Buffer) {
    m.read(buffer);
  }

  override function write(buffer:Buffer) {
    m.write(buffer);
  }

  override function read(t:Integer, buffer:Buffer) {
    m.read(t, buffer);
  }

  override function write(t:Integer, buffer:Buffer) {
    m.write(t, buffer);
  }
}

/**
 * Create a Particle.
 */
function Particle(m:Model) -> Particle {
  return construct<Particle>(m);
}
