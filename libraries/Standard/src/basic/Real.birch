/**
 * Real value. By default this represented by a 64-bit double-precision
 * floating-point value. If `--enable-single` is used when building the
 * package, and `--precision=single` used when calling `birch`, this is
 * instead represented by a 32-bit single-precision floating-point value.
 */
type Real;

hpp{{
#ifdef BIRCH_SINGLE
using Real = float;
#else
using Real = double;
#endif
}}

/**
 * Modulus.
 */
function mod(x:Real, y:Real) -> Real {
  cpp {{
  return std::fmod(x, y);
  }}
}

/**
 * Maximum of two values.
 */
function max(x:Real, y:Real) -> Real {
  cpp{{
  return std::max(x, y);
  }}
}

/**
 * Minimum of two values.
 */
function min(x:Real, y:Real) -> Real {
  cpp{{
  return std::min(x, y);
  }}
}

/**
 * Is the value `inf`?
 */
function isinf(x:Real) -> Boolean {
  cpp{{
  return std::isinf(x);
  }}
}

/**
 * Is the value `nan`?
 */
function isnan(x:Real) -> Boolean {
  cpp{{
  return std::isnan(x);
  }}
}

/**
 * Is the value finite (i.e. not `inf` or `nan`)?
 */
function isfinite(x:Real) -> Boolean {
  cpp{{
  return std::isfinite(x);
  }}
}
