/**
 * Boolean.
 */
type Boolean;

/*
 * Operators
 */
operator (!x:Boolean) -> Boolean;
operator (x:Boolean && y:Boolean) -> Boolean;
operator (x:Boolean || y:Boolean) -> Boolean;
operator (x:Boolean == y:Boolean) -> Boolean;
operator (x:Boolean != y:Boolean) -> Boolean;

/**
 * Maximum of two values (logical *or*).
 */
function max(x:Boolean, y:Boolean) -> Boolean {
  return x || y;
}

/**
 * Minimum of two values (logical *and*);
 */
function min(x:Boolean, y:Boolean) -> Boolean {
  return x && y;
}

function rows(x:Boolean) -> Integer {
  return 1;
}

function columns(x:Boolean) -> Integer {
  return 1;
}

function length(x:Boolean) -> Integer {
  return 1;
}

function size(x:Boolean) -> Integer {
  return 1;
}

function value(x:Boolean) -> Boolean {
  return x;
}

function peak(x:Boolean) -> Boolean {
  return x;
}

function eval(x:Boolean) -> Boolean {
  return x;
}

function reval(x:Boolean) -> Boolean {
  return x;
}

function grad<Gradient>(x:Boolean, d:Gradient) {
  //
}

function label(x:Boolean, gen:Integer) {
  //
}

function constant(x:Boolean, gen:Integer) {
  //
}

function constant(x:Boolean) {
  //
}
