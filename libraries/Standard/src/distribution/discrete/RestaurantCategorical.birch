/**
 * Restaurant-categorical distribution.
 */
final class RestaurantCategorical(ρ:Restaurant) < Distribution<Integer> {
  /**
   * Category probabilities.
   */
  ρ:Restaurant <- ρ;

  function supportsLazy() -> Boolean {
    return false;
  }

  function simulate() -> Integer {
    return simulate_crp_categorical(ρ.α.value(), ρ.θ.value(), ρ.n, ρ.N);
  }

//  function simulateLazy() -> Integer? {
//    return simulate_crp_categorical(ρ.α.eval(), ρ.θ.eval(), ρ.n, ρ.N);
//  }
  
  function logpdf(x:Integer) -> Real {
    return logpdf_crp_categorical(x, ρ.α.value(), ρ.θ.value(), ρ.n, ρ.N);
  }

//  function logpdfLazy(x:Expression<Integer>) -> Expression<Real>? {
//    return logpdf_lazy_crp_categorical(x, ρ.α, ρ.θ, ρ.n, ρ.N);
//  }

  function update(x:Integer) {
    assert x <= ρ.K + 1;
    if (x == ρ.K + 1) {
      ///@todo use realloc on array
      n1:Integer[ρ.K + 1];
      n1[1..ρ.K] <- ρ.n;
      n1[x] <- 1;
      ρ.n <- n1;
      ρ.K <- ρ.K + 1;
    } else {
      ρ.n[x] <- ρ.n[x] + 1;
    }
    ρ.N <- ρ.N + 1;
  }

//  function updateLazy(x:Expression<Integer>) {
//
//  }
  
  function link() {
    ρ.setChild(this);
  }
  
  function unlink() {
    ρ.releaseChild(this);
  }
}

function RestaurantCategorical(ρ:Restaurant) -> RestaurantCategorical {
  m:RestaurantCategorical(ρ);
  m.link();
  return m;
}

/*
 * Simulate a categorical distribution with Chinese restaurant process
 * prior.
 *
 * - α: Concentration.
 * - θ: Discount.
 * - n: Enumerated items.
 * - N: Total number of items.
 */
function simulate_crp_categorical(α:Real, θ:Real, n:Integer[_],
    N:Integer) -> Integer {
  assert N >= 0;
  assert sum(n) == N;

  k:Integer <- 0;
  K:Integer <- length(n);
  if (N == 0) {
    /* first component */
    k <- 1;
  } else {
    u:Real <- simulate_uniform(0.0, N + θ);
    U:Real <- K*α + θ;
    if (u < U) {
      /* new component */
      k <- K + 1;
    } else {
      /* existing component */
      while (k < K && u > U) {
        k <- k + 1;
        U <- U + n[k] - α;
      }
    }
  }
  return k;
}

/*
 * Observe a categorical variate with Chinese restaurant process
 * prior.
 *
 * - x: The variate.
 * - α: Concentration.
 * - θ: Discount.
 * - n: Enumerated items.
 * - N: Total number of items.
 */
function logpdf_crp_categorical(k:Integer, α:Real, θ:Real,
    n:Integer[_], N:Integer) -> Real {
  K:Integer <- length(n);
  if (k > K + 1) {
    return -inf;
  } else if (k == K + 1) {
    return log(K*α + θ) - log(N + θ);
  } else {
    return log(n[k] - α) - log(N + θ);
  }
}
