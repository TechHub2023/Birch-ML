/**
 * Dirichlet-categorical distribution.
 */
final class DirichletCategorical<Arg>(α:Arg) < Distribution<Integer> {
  /**
   * Concentrations.
   */
  α:Arg <- α;

  override function supportsLazy() -> Boolean {
    return false;
  }

  override function simulate() -> Integer {
    return simulate_dirichlet_categorical(value(α));
  }
  
  override function logpdf(x:Integer) -> Real {
    return logpdf_dirichlet_categorical(x, value(α));
  }

  override function update(x:Integer) -> Delay? {
    return update_dirichlet_categorical(x, value(α));
  }

  override function lower() -> Integer? {
    return 1;
  }

  override function upper() -> Integer? {
    return rows(eval(α));
  }
}

function DirichletCategorical<Arg>(α:Arg) -> {
  return construct<DirichletCategorical<Arg>>(α);
}

/**
 * Create categorical distribution.
 */
function Categorical(ρ:Random<Real[_]>) -> Distribution<Integer> {
  if ρ.hasDirichlet() {
    ρ.prune();
    let α <- ρ.getDirichlet();
    let p <- DirichletCategorical(α);
    ρ.graft(p);
    return p;
  } else if ρ.hasRestaurant() {
    ρ.prune();
    let (α, θ, n, N) <- ρ.getRestaurant();
    let p <- RestaurantCategorical(α, θ, n, N);
    ρ.graft(p);
    return p;
  } else {
    return construct<Categorical<Random<Real[_]>>>(ρ);
  }
}

/*
 * Simulate a Dirichlet-categorical distribution.
 *
 * - α: Concentrations.
 */
function simulate_dirichlet_categorical(α:Real[_]) -> Integer {
  return simulate_categorical(simulate_dirichlet(α));
}

/*
 * Observe a Dirichlet-categorical variate.
 *
 * - x: The variate.
 * - α: Concentrations.
 *
 * Returns: the log probability mass.
 */
function logpdf_dirichlet_categorical(x:Integer, α:Real[_]) -> Real {
  if 1 <= x && x <= length(α) {
    let A <- sum(α);
    return lgamma(1.0 + α[x]) - lgamma(α[x]) + lgamma(A) - lgamma(1.0 + A);
  } else {
    return -inf;
  }
}

/*
 * Update the parameters of a Dirichlet distribution with a categorical
 * likelihood.
 *
 * - x: The variate.
 * - α: Prior concentrations.
 *
 * Returns: the posterior hyperparameters `α'`.
 */
function update_dirichlet_categorical<Arg1,Arg2>(x:Arg1, α:Arg2) -> {
  let α' <- α;
  α'[x] <- α'[x] + 1.0;
  return Dirichlet(α');
}
