/**
 * Dirichlet-multinomial distribution.
 */
final class DirichletMultinomial(n:Expression<Integer>, ρ:Dirichlet) <
    Distribution<Integer[_]> {
  /**
   * Number of trials.
   */
  n:Expression<Integer> <- n;
   
  /**
   * Category probabilities.
   */
  ρ:Dirichlet <- ρ;

  function supportsLazy() -> Boolean {
    return false;
  }

  function simulate() -> Integer[_] {
    return simulate_dirichlet_multinomial(n.value(), ρ.α.value());
  }

//  function simulateLazy() -> Integer[_]? {
//    return simulate_dirichlet_multinomial(n.eval(), ρ.α.eval());
//  }
  
  function logpdf(x:Integer[_]) -> Real {
    return logpdf_dirichlet_multinomial(x, n.value(), ρ.α.value());
  }

//  function logpdfLazy(x:Expression<Integer[_]>) -> Expression<Real>? {
//    return logpdf_lazy_dirichlet_multinomial(x, n, ρ.α);
//  }

  function update(x:Integer[_]) {
    ρ.α <- box(update_dirichlet_multinomial(x, n.value(), ρ.α.value()));
  }

//  function updateLazy(x:Expression<Integer[_]>) {
//    ρ.α <- update_lazy_dirichlet_multinomial(x, n, ρ.α);
//  }

  function link() {
    ρ.setChild(this);
  }
  
  function unlink() {
    ρ.releaseChild(this);
  }
}

function DirichletMultinomial<Left>(n:Left, ρ:Dirichlet) -> {
  m:DirichletMultinomial(box(n), ρ);
  m.link();
  return m;
}

/*
 * Simulate a Dirichlet-multinomial distribution.
 *
 * - n: Number of trials.
 * - α: Concentrations.
 */
function simulate_dirichlet_multinomial(n:Integer, α:Real[_]) -> Integer[_] {
  return simulate_multinomial(n, simulate_dirichlet(α));
}

/*
 * Observe a Dirichlet-multinomial variate.
 *
 * - x: The variate.
 * - n: Number of trials.
 * - α: Concentrations.
 *
 * Returns: the log probability mass.
 */
function logpdf_dirichlet_multinomial(x:Integer[_], n:Integer, α:Real[_]) -> Real {
  assert length(x) == length(α);

  A:Real <- sum(α);
  m:Integer <- 0;
  w:Real <- lgamma(n + 1.0) + lgamma(A) - lgamma(n + A);
  for i in 1..length(α) {
    assert x[i] >= 0;
    m <- m + x[i];
    w <- w + lgamma(x[i] + α[i]) - lgamma(x[i] + 1.0) - lgamma(α[i]);
  }
  if (m == n) {
    return w;
  } else {
    return -inf;
  }
}

/*
 * Update the parameters of a Dirichlet distribution with a multinomial
 * likelihood.
 *
 * - x: The variate.
 * - n: Number of trials.
 * - α': Prior concentrations.
 *
 * Returns: the posterior hyperparameters `α'`.
 */
function update_dirichlet_multinomial(x:Integer[_], n:Integer, α:Real[_]) ->
    Real[_] {
  assert sum(x) == n;
  return vector(\(i:Integer) -> Real { return α[i] + x[i]; }, length(α));
}
