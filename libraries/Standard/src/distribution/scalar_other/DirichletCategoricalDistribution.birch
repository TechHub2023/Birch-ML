/**
 * Dirichlet-categorical distribution.
 */
final class DirichletCategoricalDistribution<Arg>(α:Arg) < Distribution<Integer> {
  /**
   * Concentrations.
   */
  α:Arg <- α;

  override function supportsLazy() -> Boolean {
    return true;
  }

  override function simulate() -> Integer! {
    return simulate_dirichlet_categorical(value(α));
  }

  override function simulateLazy() -> Integer!? {
    return simulate_dirichlet_categorical(peek(α));
  }

  override function logpdf(x:Integer!) -> Real! {
    return logpdf_dirichlet_categorical(x, value(α));
  }

  override function logpdfLazy(x:Expression<Integer>) -> Expression<Real>? {
    return box(logpdf_dirichlet_categorical(x, α));
  }

  override function update(x:Integer!) -> Delay? {
    return update_dirichlet_categorical(x, value(α));
  }

  override function updateLazy(x:Expression<Integer>) -> Delay? {
    return update_dirichlet_categorical(x, α);
  }

  override function lower() -> Integer!? {
    return 1;
  }

  override function upper() -> Integer!? {
    return rows(peek(α));
  }
}

function DirichletCategorical<Arg>(α:Arg) -> {
  return wrap_dirichlet_categorical(wrap(α));
}
function wrap_dirichlet_categorical<Arg>(α:Arg) -> {
  return construct<DirichletCategoricalDistribution<Arg>>(α);
}

/**
 * Create categorical distribution.
 */
function Categorical(ρ:Random<Real[_]>) -> Distribution<Integer> {
  ρ.prune();
  if ρ.hasDirichlet() {
    let α <- ρ.getDirichlet();
    let p <- DirichletCategorical(α);
    ρ.graft(p);
    return p;
  } else if ρ.hasRestaurant() {
    let (α, θ, n) <- ρ.getRestaurant();
    let p <- RestaurantCategorical(α, θ, n);
    ρ.graft(p);
    return p;
  } else {
    return Categorical(wrap(ρ));
  }
}

/*
 * Simulate a Dirichlet-categorical distribution.
 *
 * - α: Concentrations.
 */
function simulate_dirichlet_categorical<Arg1>(α:Arg1) -> {
  return simulate_categorical(simulate_dirichlet(α));
}

/*
 * Observe a Dirichlet-categorical variate.
 *
 * - x: The variate.
 * - α: Concentrations.
 *
 * Returns: the log probability mass.
 */
function logpdf_dirichlet_categorical<Arg1,Arg2>(x:Arg1, α:Arg2) -> {
  return lgamma(1.0 + element(α, x)) - lgamma(element(α, x)) +
      lgamma(sum(α)) - lgamma(1.0 + sum(α));
}

/*
 * Update the parameters of a Dirichlet distribution with a categorical
 * likelihood.
 *
 * - x: The variate.
 * - α: Prior concentrations.
 *
 * Returns: the posterior hyperparameters `α'`.
 */
function update_dirichlet_categorical<Arg1,Arg2>(x:Arg1, α:Arg2) -> {
  let α' <- α + single<Real>(x, length(α));
  return Dirichlet(α');
}
