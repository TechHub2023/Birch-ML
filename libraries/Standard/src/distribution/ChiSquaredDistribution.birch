hpp{{
#include <boost/math/distributions/chi_squared.hpp>
}}

hpp{{
using numbirch::simulate_chi_squared;
}}

/*
 * Observe a $\chi^2$ variate.
 *
 * - x: The variate.
 * - ν: Degrees of freedom.
 *
 * Return: the log probability density.
 */
function logpdf_chi_squared<Arg1,Arg2>(x:Arg1, ν:Arg2) -> {
  let k <- 0.5*ν;
  return (k - 1.0)*log(x) - 0.5*x - lgamma(k) - k*log(2.0);
}

/*
 * CDF of $\chi^2$ variate.
 *
 * - x: The variate.
 * - ν: Degrees of freedom.
 *
 * Return: the cumulative probability.
 */
function cdf_chi_squared<Arg1,Arg2>(x:Arg1, ν:Arg2) -> {
  return gamma_p(0.5*ν, 0.5*x);
}

/*
 * CDF of $\chi^2$ distribution.
 *
 * - P: The cumulative probability.
 * - ν: Degrees of freedom.
 *
 * Return: the quantile.
 */
function quantile_chi_squared<Arg1,Arg2>(P:Arg1, ν:Arg2) -> {
  cpp{{
  return boost::math::quantile(boost::math::chi_squared_distribution<Real>(
      wait(ν)), wait(P));
  }}
}
