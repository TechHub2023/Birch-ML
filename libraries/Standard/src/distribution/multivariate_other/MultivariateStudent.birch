/*
 * Simulate a multivariate $t$-distribution variate with location and scale.
 *
 * - k: Degrees of freedom.
 * - μ: Mean.
 * - U: Spread.
 */
function simulate_multivariate_student_t(k:Real, μ:Real[_], U:Real[_,_]) ->
    Real[_] {
  let p <- length(μ);
  return simulate_multivariate_gaussian(μ, simulate_inverse_wishart(U, k + p - 1.0));
}

/*
 * Observe a multivariate Student's $t$-distribution variate with location
 * and scale.
 *
 * - x: The variate.
 * - k: Degrees of freedom.
 * - m: Mean.
 * - U: Spread.
 *
 * Returns: the log probability density.
 */
function logpdf_multivariate_student_t(x:Real[_], k:Real, μ:Real[_],
    U:Real[_,_]) -> Real {
  let p <- length(μ);
  let a <- 0.5*(k + p);
  let b <- 0.5*k;
  let z <- x - μ;
  return lgamma(a) - 0.5*p*log(π) - lgamma(b) - 0.5*ldet(U) -
      a*log1p(dot(z, solve(U, z)));
}

/*
 * Observe a multivariate Student's $t$-distribution variate with location
 * and scale.
 *
 * - x: The variate.
 * - k: Degrees of freedom.
 * - m: Mean.
 * - U: Spread.
 *
 * Returns: the log probability density.
 */
function logpdf_lazy_multivariate_student_t(x:Expression<Real[_]>,
    k:Expression<Real>, μ:Expression<Real[_]>, U:Expression<Real[_,_]>) ->
    Expression<Real> {
  let p <- length(μ);
  let a <- 0.5*(k + p);
  let b <- 0.5*k;
  let z <- x - μ;
  return box(lgamma(a) - 0.5*p*log(π) - lgamma(b) - 0.5*ldet(U) -
      a*log1p(dot(z, solve(U, z))));
}
