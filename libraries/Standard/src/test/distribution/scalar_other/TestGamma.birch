class TestGamma < TestModel {
  x:Random<Real>;
  k:Real;
  θ:Real;

  function initialize() {
    k <- simulate_uniform(2.0, 10.0);
    θ <- simulate_uniform(0.1, 10.0);
  }

  function simulate() {
    x ~ Gamma(k, θ);
  }

  function forward() -> Real[_] {
    return [x.eval()];
  }

  function backward() -> Real[_] {
    return [x.eval()];
  }

  function marginal() -> Distribution<Real> {
    return x.getDistribution();
  }

  function size() -> Integer {
    return 1;
  }
}

program test_pdf_gamma(N:Integer <- 10000, B:Integer <- 100, S:Integer <- 5,
    lazy:Boolean <- false) {
  m:TestGamma;
  m.initialize();
  m.simulate();
  test_pdf(m.marginal(), N, B, S, lazy);
}

program test_cdf_gamma(N:Integer <- 10000) {
  m:TestGamma;
  m.initialize();
  m.simulate();
  test_cdf(m.marginal(), N);
}
