class TestBetaNegativeBinomial < TestModel {
  k:Integer;
  α:Real;
  β:Real;
  ρ:Random<Real>;
  x:Random<Integer>;

  function initialize() {
    k <- simulate_uniform_int(1, 100);
    α <- simulate_uniform(1.0, 20.0);
    β <- simulate_uniform(1.0, 20.0);
  }

  function simulate() {
    ρ ~ Beta(α, β);
    x ~ NegativeBinomial(k, ρ);
  }

  function forward() -> Real[_] {
    y:Real[2];
    y[1] <- ρ.eval();
    y[2] <- x.eval();
    return y;
  }

  function backward() -> Real[_] {
    y:Real[2];
    assert !x.hasValue();
    y[2] <- x.eval();
    assert !ρ.hasValue();
    y[1] <- ρ.eval();
    return y;
  }

  function marginal() -> Distribution<Integer> {
    return x.getDistribution();
  }

  function size() -> Integer {
    return 2;
  }
}

program test_conjugacy_beta_negative_binomial(N:Integer <- 10000, lazy:Boolean <- false) {
  m:TestBetaNegativeBinomial;
  test_conjugacy(m, N, lazy);
}

program test_pdf_beta_negative_binomial(N:Integer <- 10000, B:Integer <- 0,
    S:Integer <- 0, lazy:Boolean <- false) {
  m:TestBetaNegativeBinomial;
  m.initialize();
  m.simulate();
  test_pdf(m.marginal(), N, lazy);
}
