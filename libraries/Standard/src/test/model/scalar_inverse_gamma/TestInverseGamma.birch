class TestInverseGamma < TestModel {
  σ2:Random<Real>;
  α:Real;
  β:Real;

  function initialize() {
    α <- simulate_uniform(2.1, 10.0);
    β <- simulate_uniform(0.1, 10.0);
  }

  function simulate() {
    σ2 ~ InverseGamma(α, β);
  }

  function forward() -> Real[_] {
    return [σ2.value()];
  }

  function backward() -> Real[_] {
    return [σ2.value()];
  }

  function forwardLazy() -> Real[_] {
    return [σ2.eval()];
  }

  function backwardLazy() -> Real[_] {
    return [σ2.eval()];
  }

  function marginal() -> Distribution<Real> {
    return σ2.getDistribution();
  }

  function size() -> Integer {
    return 1;
  }
}
