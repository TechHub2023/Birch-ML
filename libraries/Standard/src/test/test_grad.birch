/*
 * Test the gradient of a pdf.
 *
 * - π: The target distribution. 
 * - N: Number of samples.
 * - backward: Test joint distributions in backward mode? (Otherwise forward
 *   mode.)
 */
function test_grad(m:TestModel, N:Integer, backward:Boolean) {
  let failed <- 0;  // number of failed tests
  let h <- 1.0e-6;  // interval width for finite difference estimate
  let ε <- 2.0e-2;  // relative error threshold for fail

  parallel for n in 1..N {
    let handler <- construct<Handler>(backward, true);
    let m' <- copy(m);
    with handler {
      m'.initialize();
      m'.simulate();
      m'.forward();
    }

    /* compute gradient */
    let x <- handler.args();
    let d <- handler.grad();

    /* compare with finite difference estimates */
    for i in 1..rows(x) {
      let y <- x;
      let z <- x;
      y[i] <- y[i] - 0.5*h;
      z[i] <- z[i] + 0.5*h;
      let q <- handler.move(y);
      let r <- handler.move(z);
      let fd <- (r - q)/h;
      if N > 10 {  // if less, considered smoke test only
        let δ <- abs(d[i] - fd);
        if !(δ <= ε*abs(fd)) {
          stderr.print("***failed*** on component " + i + ", d=" + d[i] +
              ", fd=" + fd + ", "  + δ + " > " + ε*abs(fd) + "\n");
          failed <- failed + 1;
        }
      }
    }
    if failed > 0 {
      exit(1);
    }
  }
}
