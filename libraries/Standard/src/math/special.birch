cpp{{
#include <boost/math/special_functions/gamma.hpp>
#include <boost/math/special_functions/binomial.hpp>
}}

/**
 * Digamma function (derivative of `lgamma`).
 */
function digamma(x:Real) -> Real {
  cpp{{
  return numbirch::digamma(x);
  }}
}

/**
 * Multivariate digamma function (derivative of multivariate `lgamma`).
 */
function digamma(x:Real, p:Integer) -> Real {
  cpp{{
  return numbirch::digamma(x, p);
  }}
}

/**
 * Regularized lower incomplete gamma function.
 */
function gamma_p(a:Real, x:Real) -> Real {
  cpp{{
  return boost::math::gamma_p(a, x);
  }}
}

/**
 * Regularized upper incomplete gamma function.
 */
function gamma_q(a:Real, x:Real) -> Real {
  cpp{{
  return boost::math::gamma_q(a, x);
  }}
}

/**
 * Incomplete beta function.
 */
function ibeta(a:Real, b:Real, x:Real) -> Real {
  cpp{{
  return boost::math::ibeta(a, b, x);
  }}
}
