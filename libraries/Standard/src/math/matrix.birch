/**
 * Lower-triangular Cholesky factor of a symmetric positive definite matrix,
 * $S = LL^{\top}$.
 */
function chol(S:Real[_,_]) -> Real[_,_] {
  assert rows(S) == columns(S);
  L:Real[rows(S),columns(S)];
  cpp{{
  numbirch::chol(S.rows(), S.data(), S.rowStride(), L.data(), L.rowStride());
  }}
  return L;
}

/**
 * Hadamard (element-wise) vector product.
 */
function hadamard<Type>(x:Type[_], y:Type[_]) -> Type[_] {
  assert length(x) == length(y);
  z:Real[length(x)];
  cpp{{
  numbirch::hadamard(x.rows(), x.data(), x.rowStride(), y.data(),
      y.rowStride(), z.data(), z.rowStride());
  }}
  return z;
}

/**
 * Hadamard (element-wise) matrix product.
 */
function hadamard<Type>(X:Type[_,_], Y:Type[_,_]) -> Type[_,_] {
  assert rows(X) == rows(Y);
  assert columns(X) == columns(Y);
  Z:Real[rows(X), columns(X)];
  cpp{{
  numbirch::hadamard(X.rows(), X.data(), X.rowStride(), Y.data(),
      Y.rowStride(), Z.data(), Z.rowStride());
  }}
  return Z;
}
