struct LCholDet<Middle>(m:Middle) < Unary<Middle>(m) {
  /**
   * Memoized result.
   */
  phantom x;

  hpp{{
  BIRCH_UNARY_FUNCTION_FORM(lcholdet)
  BIRCH_UNARY_FUNCTION_GRAD(lcholdet_grad)
  BIRCH_FUNCTION_FORM(lcholdet)
  }}
}

hpp{{
namespace birch {
using numbirch::lcholdet;
using numbirch::lcholdet_grad;

template<class Middle, std::enable_if_t<is_delay_v<Middle>,int> = 0>
LCholDet<Middle> lcholdet(const Middle& m) {
  return construct<LCholDet<Middle>>(m);
}
}
}}

/**
 * Logarithm of the determinant of a symmetric positive definite matrix via
 * the Cholesky factorization. The determinant of a positive definite matrix
 * is always positive, so its logarithm is defined.
 * 
 * @param L Lower-triangular Cholesky factor $L$ of the symmetric positive
 * definite matrix $S = LL^\top$.
 * 
 * @return Result $\log(\det S) = \log(\det LL^\top) = 2 \log(\det L)$.
 */
function lcholdet(L:RealMatrixLike) -> RealScalarLike;

function lcholdet<Arg>(L:DiagonalScalar<Arg>) -> {
  return 2.0*L.n*log(L.m);
}

function lcholdet<Arg>(L:DiagonalVector<Arg>) -> {
  return 2.0*sum(log(L.m));
}
