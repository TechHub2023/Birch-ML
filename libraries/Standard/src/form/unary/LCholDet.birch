struct LCholDet<Middle>(m:Middle) < Unary<Middle>(m) {
  /**
   * Memoized result.
   */
  phantom x;

  hpp{{
  BIRCH_UNARY_FUNCTION_FORM(lcholdet, lcholdet_grad)
  }}
}

hpp{{
namespace birch {
using numbirch::lcholdet;
using numbirch::lcholdet_grad;

/**
 * Log-determinant of a symmetric positive-definite matrix via the Cholesky
 * factorization.
 */
template<class Middle, std::enable_if_t<is_delay_v<Middle>,int> = 0>
LCholDet<Middle> lcholdet(const Middle& m) {
  return construct<LCholDet<Middle>>(m);
}
}
}}
