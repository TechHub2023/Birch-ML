struct FrobeniusSelf<Middle>(m:Middle) < Unary<Middle>(m) {
  /**
   * Memoized result.
   */
  phantom x;

  hpp{{
  BIRCH_UNARY_FUNCTION_FORM(frobenius, frobenius_grad)
  BIRCH_FUNCTION_FORM(frobenius, frobenius_grad)
  }}
}

hpp{{
namespace birch {
using numbirch::frobenius;
using numbirch::frobenius_grad;

template<class Middle, std::enable_if_t<is_delay_v<Middle>,int> = 0>
FrobeniusSelf<Middle> frobenius(const Middle& m) {
  return construct<FrobeniusSelf<Middle>>(m);
}
}
}}

/**
 * Matrix Frobenius product.
 * 
 * @param A Matrix $A$.
 * 
 * @return Result $\langle A, A \rangle_\mathrm{F} = \mathrm{Tr}(A^\top A) =
 * \sum_{ij} A_{ij}^2$ as a scalar.
 */
function frobenius(A:RealMatrixLike) -> RealScalarLike;
