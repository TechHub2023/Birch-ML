struct LDet<Middle>(m:Middle) < Unary<Middle>(m) {
  //
}

function value<Middle>(x:LDet<Middle>) -> {
  return ldet(value(x.m));
}

function peek<Middle>(x:LDet<Middle>) -> {
  return ldet(peek(x.m));
}

function eval<Middle>(x:LDet<Middle>) -> {
  return ldet(eval(x.m));
}

function grad<Middle,Gradient>(x:LDet<Middle>, d:Gradient) {
  grad(x.m, outer(d, inv(peek(x.m))));
}

/**
 * Log-determinant of a matrix.
 */
function ldet<Middle>(m:Middle) -> LDet<Middle> {
  return construct<LDet<Middle>>(m);
}

/**
 * Log-determinant of a matrix.
 */
function ldet(A:Real[_,_]) -> Real {
  cpp{{
  return numbirch::ldet(A.rows(), A.data(), A.stride());
  }}
}
