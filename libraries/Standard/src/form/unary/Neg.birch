/**
 * Delayed form for negation. This is returned by the function
 * [neg](../../functions/neg) and operator [-](../../operators/neg_) with a
 * form or expression argument.
 */
struct Neg<Middle>(m:Middle) < Unary<Middle>(m) {
  /**
   * Memoized result.
   */
  phantom x;

  hpp{{
  BIRCH_UNARY_FUNCTION_FORM(neg, neg_grad)
  }}
}

hpp{{
namespace birch {
using numbirch::neg;
using numbirch::neg_grad;

template<class Middle, std::enable_if_t<is_delay_v<Middle>,int> = 0>
Neg<Middle> neg(const Middle& m) {
  return construct<Neg<Middle>>(m);
}

template<class Middle, std::enable_if_t<is_delay_v<Middle>,int> = 0>
Neg<Middle> operator-(const Middle& m) {
  return construct<Neg<Middle>>(m);
}
}
}}
