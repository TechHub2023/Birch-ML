struct Neg<Middle>(m:Middle) < Unary<Middle>(m) {
  /**
   * Memoized result.
   */
  phantom x;

  hpp{{
  BIRCH_UNARY_FUNCTION_FORM(neg, neg_grad)
  }}
}

hpp{{
namespace birch {
using numbirch::neg;
using numbirch::neg_grad;

/**
 * Negation.
 */
template<class Middle, std::enable_if_t<is_delay<Middle>::value,int> = 0>
Neg<Middle> neg(const Middle& m) {
  return construct<Neg<Middle>>(m);
}
}
}}
