struct LTriDet<Middle>(m:Middle) < Unary<Middle>(m) {
  /**
   * Memoized result.
   */
  phantom x;

  hpp{{
  BIRCH_UNARY_FUNCTION_FORM(ltridet, ltridet_grad)
  }}
}

hpp{{
namespace birch {
using numbirch::ltridet;
using numbirch::ltridet_grad;

template<class Middle, std::enable_if_t<is_delay_v<Middle>,int> = 0>
LTriDet<Middle> ltridet(const Middle& m) {
  return construct<LTriDet<Middle>>(m);
}
}
}}

/**
 * Logarithm of the absolute value of the determinant of a lower-triangular
 * matrix.
 * 
 * @param L Lower-triangular matrix $L$.
 * 
 * @return Result $\log|\det L|$.
 */
function ltridet(L:RealMatrixLike) -> RealScalarLike;
