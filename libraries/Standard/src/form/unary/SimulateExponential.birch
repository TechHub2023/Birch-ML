struct SimulateExponential<Middle>(m:Middle) < Unary<Middle>(m) {
  /**
   * Memoized result.
   */
  phantom x;

  hpp{{
  BIRCH_UNARY_FUNCTION_FORM(simulate_exponential)
  BIRCH_FUNCTION_FORM(simulate_exponential)
  }}
}

hpp{{
namespace birch {
using numbirch::simulate_exponential;

template<class Middle, std::enable_if_t<is_delay_v<Middle>,int> = 0>
SimulateExponential<Middle> simulate_exponential(const Middle& m) {
  return construct<SimulateExponential<Middle>>(m);
}
}
}}
