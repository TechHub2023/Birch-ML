struct TanFunction {
function compute<Value>(m:Value) -> {
    return tan(m);
  }

function grad<Gradient,Value>(d:Gradient, m:Value) -> {
    return d*(1.0 + pow(tan(m), 2.0));
  }
}
struct Tan<Middle> = Unary<TanFunction,Middle>;

/**
 * Tangent.
 */
function tan<Middle>(m:Middle) -> {
  return construct<Tan<Middle>>(m);
}

/**
 * Tangent.
 */
function tan(m:Integer) -> Real {
  return tan(scalar<Real>(m));
}

/**
 * Tangent.
 */
function tan(m:Real) -> Real {
  cpp {{
  return std::tan(m);
  }}
}
