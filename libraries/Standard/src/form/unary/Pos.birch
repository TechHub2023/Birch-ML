struct Pos<Middle>(m:Middle) < Unary<Middle>(m) {
  /**
   * Memoized result.
   */
  phantom x;

  hpp{{
  BIRCH_UNARY_FUNCTION_FORM(pos, pos_grad)
  }}
}

hpp{{
namespace birch {
using numbirch::pos;
using numbirch::pos_grad;

/**
 * Unary plus.
 */
template<class Middle, std::enable_if_t<is_delay_v<Middle>,int> = 0>
Pos<Middle> pos(const Middle& m) {
  return construct<Pos<Middle>>(m);
}

/**
 * Unary plus.
 */
template<class Middle, std::enable_if_t<is_delay_v<Middle>,int> = 0>
Pos<Middle> operator+(const Middle& m) {
  return construct<Pos<Middle>>(m);
}

}
}}
