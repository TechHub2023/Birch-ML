struct CholInv<Middle>(m:Middle) < Unary<Middle>(m) {
  //
}

function value<Middle>(x:CholInv<Middle>) -> {
  return cholinv(value(x.m));
}

function peek<Middle>(x:CholInv<Middle>) -> {
  return cholinv(peek(x.m));
}

function eval<Middle>(x:CholInv<Middle>) -> {
  return cholinv(eval(x.m));
}

function grad<Middle,Gradient>(x:CholInv<Middle>, d:Gradient) {
  let y <- cholinv(peek(x.m));
  grad(x.m, -y*d*y);
}

/**
 * Inverse of a symmetric positive-definite matrix via the Cholesky
 * factorization.
 */
function cholinv<Middle>(m:Middle) -> CholInv<Middle> {
  return construct<CholInv<Middle>>(m);
}

/**
 * Inverse of a symmetric positive-definite matrix via the Cholesky
 * factorization.
 */
function cholinv(S:Real[_,_]) -> Real[_,_] {
  B:Real[rows(S), columns(S)];
  cpp{{
  numbirch::cholinv(S.rows(), S.data(), S.stride(), B.data(), B.stride());
  }}
  return B;
}
