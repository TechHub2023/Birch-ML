struct CholInv<Middle>(m:Middle) < Unary<Middle>(m) {
  /**
   * Memoized result.
   */
  phantom x;

  hpp{{
  BIRCH_UNARY_FUNCTION_FORM(cholinv, cholinv_grad)
  BIRCH_FUNCTION_FORM(cholinv, cholinv_grad)
  }}
}

hpp{{
namespace birch {
using numbirch::cholinv;
using numbirch::cholinv_grad;

template<class Middle, std::enable_if_t<is_delay_v<Middle>,int> = 0>
CholInv<Middle> cholinv(const Middle& m) {
  return construct<CholInv<Middle>>(m);
}
}
}}

/**
 * Inverse of a symmetric positive definite matrix via the Cholesky
 * factorization.
 * 
 * @param L Lower-triangular Cholesky factor $L$ of the symmetric positive
 * definite matrix $S = LL^\top$.
 * 
 * @return Result $S^{-1} = (LL^\top)^{-1}$.
 */
function cholinv(L:RealMatrixLike) -> RealMatrixLike;

function cholinv<Arg>(L:DiagonalScalar<Arg>) -> {
  return Diagonal(pow(L.m, -2.0), L.n);
}

function cholinv<Arg>(L:DiagonalVector<Arg>) -> {
  return Diagonal(pow(L.m, -2.0));
}
