struct Floor<Middle>(m:Middle) < Unary<Middle>(m) {
  /**
   * Memoized result.
   */
  phantom x;

  hpp{{
  BIRCH_UNARY_FUNCTION_FORM(floor, floor_grad)
  }}
}

hpp{{
namespace birch {
using numbirch::floor;
using numbirch::floor_grad;

/**
 * Round to largest integer value not greater than argument.
 */
template<class Middle, std::enable_if_t<is_delay_v<Middle>,int> = 0>
Floor<Middle> floor(const Middle& m) {
  return construct<Floor<Middle>>(m);
}
}
}}
