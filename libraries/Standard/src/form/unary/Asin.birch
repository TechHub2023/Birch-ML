final class AsinFunction {
function compute<Value>(m:Value) -> {
    return asin(m);
  }

function grad<Gradient,Value>(d:Gradient, m:Value) -> {
    return d/sqrt(1.0 - pow(m, 2.0));
  }
}
class Asin<Middle> = Unary<AsinFunction,Middle>;

/**
 * Arc sine.
 */
function asin<Middle>(m:Middle) -> {
  return construct<Asin<Middle>>(m);
}

/**
 * Arc sine.
 */
function asin(m:Integer) -> Real {
  return asin(scalar<Real>(m));
}

/**
 * Arc sine.
 */
function asin(m:Real) -> Real {
  cpp {{
  return std::asin(m);
  }}
}
