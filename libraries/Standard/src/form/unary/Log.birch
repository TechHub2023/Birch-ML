struct LogFunction {
function compute<Value>(m:Value) -> {
    return log(m);
  }

function grad<Gradient,Value>(d:Gradient, m:Value) -> {
    return d/m;
  }
}
struct Log<Middle> = Unary<LogFunction,Middle>;

/**
 * Natural logarithm.
 */
function log<Middle>(m:Middle) -> {
  return construct<Log<Middle>>(m);
}

/**
 * Natural logarithm.
 */
function log(m:Integer) -> Real {
  return log(scalar<Real>(m));
}

/**
 * Natural logarithm.
 */
function log(m:Real) -> Real {
  cpp {{
  return std::log(m);
  }}
}
