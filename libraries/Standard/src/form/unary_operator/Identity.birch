struct Identity<Middle>(m:Middle) < Unary<Middle>(m) {
  /**
   * Memoized result.
   */
  phantom x;

  hpp{{
  BIRCH_UNARY_FUNCTION_FORM(operator+, identity_grad)
  }}
}

hpp{{
namespace birch {
using numbirch::operator+;
using numbirch::identity_grad;

/**
 * Identity.
 */
template<class Middle, std::enable_if_t<is_delay<Middle>::value,int> = 0>
Identity<Middle> operator+(const Middle& m) {
  return construct<Identity<Middle>>(m);
}
}
}}
