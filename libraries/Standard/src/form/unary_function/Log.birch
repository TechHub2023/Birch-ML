struct Log<Middle>(m:Middle) < Unary<Middle>(m) {
  hpp{{
  BIRCH_UNARY_FUNCTION_FORM(log)
  }}
}

function grad<Middle,Gradient>(x:Log<Middle>, d:Gradient) {
  grad(x.m, hadamard(d, rcp(peek(x.m))));
}

hpp{{
namespace birch {
/**
 * Logarithm.
 */
template<class Middle, std::enable_if_t<is_delay<Middle>::value,int> = 0>
Log<Middle> log(const Middle& m) {
  return construct<Log<Middle>>(m);
}
}
}}

/**
 * Logarithm.
 */
function log(m:Real) -> Real {
  cpp{{
  return std::log(m);
  }}
}
