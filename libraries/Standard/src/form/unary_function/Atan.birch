struct Atan<Middle>(m:Middle) < Unary<Middle>(m) {
  /**
   * Memoized result.
   */
  phantom x;

  hpp{{
  BIRCH_UNARY_FUNCTION_FORM(atan)
  }}
}

function grad<Middle,Gradient>(x:Atan<Middle>, d:Gradient) {
  grad(x.m, d/(1.0 + pow(peek(x.m), 2.0)));
}

hpp{{
namespace birch {
using numbirch::atan;

/**
 * Arc tangent.
 */
template<class Middle, std::enable_if_t<is_delay<Middle>::value,int> = 0>
Atan<Middle> atan(const Middle& m) {
  return construct<Atan<Middle>>(m);
}
}
}}
