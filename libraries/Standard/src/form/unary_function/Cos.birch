struct Cos<Middle>(m:Middle) < Unary<Middle>(m) {
  hpp{{
  BIRCH_UNARY_FUNCTION_FORM(cos)
  }}
}

function grad<Middle,Gradient>(x:Cos<Middle>, d:Gradient) {
  grad(x.m, -d*sin(peek(x.m)));
}

hpp{{
namespace birch {
/**
 * Cosine.
 */
template<class Middle, std::enable_if_t<is_delay<Middle>::value,int> = 0>
Cos<Middle> cos(const Middle& m) {
  return construct<Cos<Middle>>(m);
}
}
}}

/**
 * Cosine.
 */
function cos(m:Real) -> Real {
  cpp{{
  return std::cos(m);
  }}
}
