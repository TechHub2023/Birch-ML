struct Dot<Left,Right>(l:Left, r:Right) < Binary<Left,Right>(l, r) {
  /**
   * Memoized result.
   */
  phantom x;

  hpp{{
  BIRCH_BINARY_FUNCTION_FORM(dot)
  BIRCH_BINARY_FUNCTION_GRAD(dot_grad)
  BIRCH_FUNCTION_FORM(dot)
  }}
}

hpp{{
namespace birch {
using numbirch::dot;
using numbirch::dot_grad1;
using numbirch::dot_grad2;

template<class Left, class Right, std::enable_if_t<
    is_delay_v<Left,Right>,int> = 0>
Dot<Left,Right> dot(const Left& l, const Right& r) {
  return construct<Dot<Left,Right>>(l, r);
}
}
}}

/**
 * Vector-vector dot product.
 * 
 * @param x Vector $x$.
 * @param y Vector $y$.
 * 
 * @return Result $x^\top y$ as a scalar.
 */
function dot(x:RealVectorLike, y:RealVectorLike) -> RealScalarLike;
