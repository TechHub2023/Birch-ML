struct AndFunction {  
  function compute<LeftValue,RightValue>(l:LeftValue, r:RightValue) -> {
    return l && r;
  }
  
  function grad<Gradient>(d:Gradient) -> {
    return (0.0, 0.0);
  }
}
struct And<Left,Right> = Linear<AndFunction,Left,Right>;

/**
 * Logical `and`.
 */
operator<Left,Right> (l:Left && r:Right) -> {
  return construct<And<Left,Right>>(l, r);
}

/**
 * Logical `and`.
 */
operator (l:Boolean && r:Boolean) -> Boolean;
