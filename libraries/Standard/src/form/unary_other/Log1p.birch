struct Log1pFunction {
function compute<Value>(m:Value) -> {
    return log1p(m);
  }

function grad<Gradient,Value>(d:Gradient, m:Value) -> {
    return d/(1.0 + m);
  }
}
struct Log1p<Middle> = Unary<Log1pFunction,Middle>;

/**
 * Natural logarithm of 1 plus argument.
 */
function log1p<Middle>(m:Middle) -> {
  return construct<Log1p<Middle>>(m);
}

/**
 * Natural logarithm of 1 plus argument.
 */
function log1p(m:Integer) -> Real {
  return log1p(scalar<Real>(m));
}

/**
 * Natural logarithm of 1 plus argument.
 */
function log1p(m:Real) -> Real {
  cpp {{
  return std::log1p(m);
  }}
}
