final class SqrtFunction {
function compute<Value>(m:Value) -> {
    return sqrt(m);
  }

function grad<Gradient,Value>(d:Gradient, m:Value) -> {
    return d*0.5/sqrt(m);
  }
}
class Sqrt<Middle> = Unary<SqrtFunction,Middle>;

/**
 * Square root.
 */
function sqrt<Middle>(m:Middle) -> {
  return construct<Sqrt<Middle>>(m);
}

/**
 * Square root.
 */
function sqrt(m:Integer) -> Real {
  return sqrt(scalar<Real>(m));
}

/**
 * Square root.
 */
function sqrt(x:Real) -> Real {
  cpp {{
  return std::sqrt(x);
  }}
}
