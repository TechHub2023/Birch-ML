struct SinhFunction {
function compute<Value>(m:Value) -> {
    return sinh(m);
  }

function grad<Gradient,Value>(d:Gradient, m:Value) -> {
    return d*cosh(m);
  }
}
struct Sinh<Middle> = Unary<SinhFunction,Middle>;

/**
 * Hyperbolic sine.
 */
function sinh<Middle>(m:Middle) -> {
  return construct<Sinh<Middle>>(m);
}

/**
 * Hyperbolic sine.
 */
function sinh(m:Integer) -> Real {
  return sinh(scalar<Real>(m));
}

/**
 * Hyperbolic sine.
 */
function sinh(m:Real) -> Real {
  cpp {{
  return std::sinh(m);
  }}
}
