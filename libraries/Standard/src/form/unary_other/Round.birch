struct RoundFunction {
  function compute<Value>(m:Value) -> {
    return round(m);
  }

  function grad<Gradient,Value>(d:Gradient, m:Value) -> {
    return 0.0;
  }
}
struct Round<Middle> = Unary<RoundFunction,Middle>;

/**
 * Round to nearest integer value.
 */
function round<Middle>(m:Middle) -> {
  return construct<Round<Middle>>(m);
}

/**
 * Round to nearest integer value.
 */
function round(x:Real) -> Real {
  cpp {{
  return std::round(x);
  }}
}
