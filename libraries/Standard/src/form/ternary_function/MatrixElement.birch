/*
 * Element of a matrix.
 */
struct MatrixElement<Left,Middle,Right>(l:Left, m:Middle, r:Right) <
    Ternary<Left,Middle,Right>(l, m, r) {
  /**
   * Memoized result.
   */
  phantom x;

  hpp{{
  BIRCH_TERNARY_FUNCTION_FORM(element, element_grad)
  }}
}

hpp{{
namespace birch {
using numbirch::element;
using numbirch::element_grad;

/**
 * Element of a matrix.
 */
template<class Left, class Middle, class Right, std::enable_if_t<
    is_delay<Left,Middle,Right>::value,int> = 0>
MatrixElement<Left,Middle,Right> element(const Left& l, const Middle& m,
    const Right& r) {
  return construct<MatrixElement<Left,Middle,Right>>(l, m, r);
}
}
}}
