struct LCholDetFunction {
  function compute<Value>(m:Value) -> {
    return lcholdet(m);
  }

  function grad<Gradient,Value>(d:Gradient, m:Value) -> {
    return d*cholinv(m);
  }
}
struct LCholDet<Middle> = UnaryMemoized<LCholDetFunction,Middle>;

/**
 * Log-determinant of a symmetric positive-definite matrix via the Cholesky
 * factorization.
 */
function lcholdet<Middle>(m:Middle) -> {
  return construct<LCholDet<Middle>>(m);
}

/**
 * Log-determinant of a matrix.
 */
function lcholdet(S:Real[_,_]) -> Real {
  let L <- chol(S);
  cpp{{
  return 2.0*L.toEigen().diagonal().array().log().sum();
  }}
}
