/**
 * Iterator with a single element.
 */
final class SingletonIterator<Type>(x:Type) < Iterator<Type> {
  /**
   * Single element.
   */
  x:Type? <- x;

  function hasNext() -> Boolean {
    return x?;
  }

  function next() -> Type {
    let x' <- x!;
    x <- nil;
    return x';
  }
}

/**
 * Create an SingletonIterator.
 */
function SingletonIterator<Type>(x:Type) -> SingletonIterator<Type> {
  return construct<SingletonIterator<Type>>(x);
}
