/**
 * Particle sampler.
 *
 * ```mermaid
 * classDiagram
 *    ParticleSampler <|-- ConditionalParticleSampler
 *    ConditionalParticleSampler <|-- ParticleGibbsSampler
 *    link ParticleSampler "../ParticleSampler/"
 *    link ConditionalParticleSampler "../ConditionalParticleSampler/"
 *    link ParticleGibbsSampler "../ParticleGibbsSampler/"
 * ```
 */
class ParticleSampler {
  /**
   * Start a sample.
   *
   * - filter: Particle filter.
   * - model: Model.
   * - input: Input buffer.
   */
  function sample(filter:ParticleFilter, model:Model, input:Buffer) {
    filter.filter(model, input);
  }

  /**
   * Step a sample.
   *
   * - filter: Particle filter.
   * - input: Input buffer.
   * - t: The step number, beginning at 1.
   */
  function sample(filter:ParticleFilter, t:Integer, input:Buffer) {
    filter.filter(t, input);
  }

  /**
   * Draw a sample.
   */
  function draw(filter:ParticleFilter) -> (Model, Real) {
    return (filter.x[filter.b].m, filter.lnormalize);
  }
}
