/*
 * Iterator over the contents of a [Buffer](../Buffer) that represents an
 * object (in the JSON sense).
 *
 * - keys: Keys.
 * - values: Values.
 */
final class ObjectBufferIterator(keys:Array<String>, values:Array<Buffer>) <
    Iterator<Buffer> {
  /**
   * Keys.
   */
  keys:Array<String>? <- keys;

  /**
   * Values.
   */
  values:Array<Buffer>? <- values;

  /**
   * Is there a next element?
   */
  override function hasNext() -> Boolean {
    return keys? && values?;
  }

  /**
   * Get the next element.
   */
  override function next() -> Buffer {
    let buffer <- make_buffer(keys!, values!);
    keys <- nil;
    values <- nil;
    return buffer;
  }
}
