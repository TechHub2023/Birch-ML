/**
 * Multivariate unary expression.
 *
 * - Argument: Argument type.
 * - Value: Result type.
 */
abstract class MultivariateUnaryExpression<Argument,Value>(m:Argument) <
    MultivariateExpression<Value> {  
  /**
   * Argument.
   */
  m:Argument? <- m;

  final override function doDepth() -> Integer {
    return m!.depth() + 1;
  }

  final override function doValue() {
    m!.value();
  }

  final override function doEval(gen:Integer) {
    m!.countEval(gen);
  }

  final override function doReval(gen:Integer) {
    m!.countReval(gen);
  }

  final override function doConstant() {
    m <- nil;
  }
}
