/**
 * Lazy less-than.
 */
final class LessThan(l:Expression<Real>, r:Expression<Real>) <
    ScalarBinaryExpression<Expression<Real>,Expression<Real>,Boolean>(l, r) {  
  override function doCompute() {
    x <- global.eval(l!) < global.eval(r!);
  }
  
  override function doGrad(gen:Integer) {
    //
  }
}

/**
 * Lazy less-than.
 */
operator (l:Expression<Real> < r:Expression<Real>) -> LessThan {
  return construct<LessThan>(l, r);
}

/**
 * Lazy less-than.
 */
operator (l:Real < r:Expression<Real>) -> LessThan {
  return box(l) < r;
}

/**
 * Lazy less-than.
 */
operator (l:Expression<Real> < r:Real) -> LessThan {
  return l < box(r);
}
