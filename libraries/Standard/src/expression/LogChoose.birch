/**
 * Lazy `lchoose`.
 */
final class LogChoose(l:Expression<Integer>, r:Expression<Integer>) <
    ScalarBinaryExpression<Expression<Integer>,Expression<Integer>,Real>(l, r) {  
  override function doCompute() {
    x <- lchoose(l!.eval(), r!.eval());
  }
  
  override function doGrad(gen:Integer) {
    //
  }
}

/**
 * Lazy `lchoose`.
 */
function lchoose(l:Expression<Integer>, r:Expression<Integer>) -> LogChoose {
  return construct<LogChoose>(l, r);
}

/**
 * Lazy `lchoose`.
 */
function lchoose(l:Integer, r:Expression<Integer>) -> LogChoose {
  return lchoose(box(l), r);
}

/**
 * Lazy `lchoose`.
 */
function lchoose(l:Expression<Integer>, r:Integer) -> LogChoose {
  return lchoose(l, box(r));
}
