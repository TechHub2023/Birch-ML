/**
 * Lazy `lgamma`.
 */
final class LogGamma(m:Expression<Real>) <
    ScalarUnaryExpression<Expression<Real>,Real>(m) {
  override function doCompute() {
    x <- lgamma(global.eval(m!));
  }

  override function doGrad(gen:Integer) {
    count_grad(m!, gen, d!*digamma(global.eval(m!)));
  }
}

/**
 * Lazy `lgamma`.
 */
function lgamma(m:Expression<Real>) -> LogGamma {
  return construct<LogGamma>(m);
}
