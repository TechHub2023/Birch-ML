/**
 * Matrix unary expression.
 *
 * - Argument: Argument type.
 * - Value: Result type.
 */
abstract class MatrixUnaryExpression<Argument,Value>(m:Argument) <
    MatrixExpression<Value> {  
  /**
   * Argument.
   */
  m:Argument? <- m;

  final override function doDepth() -> Integer {
    return global.depth(m!) + 1;
  }

  final override function doValue() {
    global.value(m!);
  }

  final override function doEval(gen:Integer) {
    count_eval(m!, gen);
  }

  final override function doReval(gen:Integer) {
    count_reval(m!, gen);
  }

  final override function doConstant() {
    m <- nil;
  }
}
