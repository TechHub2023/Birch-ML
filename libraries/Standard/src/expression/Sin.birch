/**
 * Lazy `sin`.
 */
final class Sin(m:Expression<Real>) <
    ScalarUnaryExpression<Expression<Real>,Real>(m) {
  override function doCompute() {
    x <- sin(m!.eval());
  }

  override function doGrad(gen:Integer) {
    m!.countGrad(gen, d!*cos(m!.eval()));
  }
}

/**
 * Lazy `sin`.
 */
function sin(m:Expression<Real>) -> Sin {
  return construct<Sin>(m);
}
