/**
 * Lazy `rectify`.
 */
final class MatrixRectify(m:Expression<Real[_,_]>) <
    MatrixUnaryExpression<Expression<Real[_,_]>,Real[_,_]>(m) {
  override function doRows() -> Integer {
    return global.rows(m!);
  }

  override function doColumns() -> Integer {
    return global.columns(m!);
  }

  override function doCompute() {
    x <- transform(global.eval(m!), \(m:Real) -> Real { return rectify(m); });
  }

  override function doGrad(gen:Integer) {
    count_grad(m!, gen, transform(d!, x!, \(d:Real, x:Real) -> Real {
        if x > 0.0 {
          return d;
        } else {
          return 0.0;
        }
      }));
  }
}

/**
 * Lazy `rectify`.
 */
function rectify(m:Expression<Real[_,_]>) -> MatrixRectify {
  return construct<MatrixRectify>(m);
}
