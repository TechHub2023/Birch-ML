/**
 * Lazy cast.
 */
final class Cast<From,To>(m:Expression<From>) <
    ScalarUnaryExpression<Expression<From>,To>(m) {
  override function doCompute() {
    x <- To?(m!.eval())!;
  }

  override function doGrad(gen:Integer) {
    m!.countGrad(gen, d!);
  }
}

/**
 * Lazy cast, identity function.
 */
function Real(m:Expression<Real>) -> Expression<Real> {
  return m;
}

/**
 * Lazy cast.
 */
function Real(m:Expression<Integer>) -> Cast<Integer,Real> {
  return construct<Cast<Integer,Real>>(m);
}

/**
 * Lazy cast.
 */
function Real(m:Expression<Boolean>) -> Cast<Boolean,Real> {
  return construct<Cast<Boolean,Real>>(m);
}
