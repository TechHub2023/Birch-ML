/**
 * Lazy `scalar`.
 */
final class ScalarMultivariate<Value>(m:Expression<Value[_]>) <
    ScalarUnaryExpression<Expression<Value[_]>,Value>(m) {
  override function doCompute() {
    x <- scalar(m!.eval());
  }

  override function doGrad(gen:Integer) {
    m!.countGrad(gen, [d]);
  }
}

/**
 * Lazy `scalar`.
 */
function scalar<Value>(m:Expression<Value[_]>) -> ScalarMultivariate<Value> {
  return construct<ScalarMultivariate<Value>>(m);
}
