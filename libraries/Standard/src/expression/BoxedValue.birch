/**
 * Boxed value.
 */
final acyclic class BoxedValue<Value>(x:Value!) < Expression<Value>(x, true) {  
  //
}

function length<Value>(x:BoxedValue<Value>) -> Integer {
  return x.length();
}

function size<Value>(x:BoxedValue<Value>) -> Integer {
  return x.size();
}

function rows<Value>(x:BoxedValue<Value>) -> Integer {
  return x.rows();
}

function columns<Value>(x:BoxedValue<Value>) -> Integer {
  return x.columns();
}

function link<Value>(x:BoxedValue<Value>) {
  x.link();
}

function value<Value>(x:BoxedValue<Value>) -> Value! {
  return x.value();
}

function peek<Value>(x:BoxedValue<Value>) -> Value! {
  return x.peek();
}

function eval<Value>(x:BoxedValue<Value>) -> Value! {
  return x.eval();
}

function grad<Value,Gradient>(x:BoxedValue<Value>, d:Gradient) {
  x.grad(d);
}

function label<Value>(x:BoxedValue<Value>, gen:Integer) {
  x.label(gen);
}

function constant<Value>(x:BoxedValue<Value>, gen:Integer) {
  x.constant(gen);
}

function constant<Value>(x:BoxedValue<Value>) {
  x.constant();
}
