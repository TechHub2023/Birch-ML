/**
 * Lazy `tan`.
 */
final class Tan(m:Expression<Real>) <
    ScalarUnaryExpression<Expression<Real>,Real>(m) {
  override function doCompute() {
    x <- tan(m!.eval());
  }

  override function doGrad(gen:Integer) {
    m!.countGrad(gen, d!*(1.0 + pow(tan(m!.eval()), 2.0)));
  }
}

/**
 * Lazy `tan`.
 */
function tan(m:Expression<Real>) -> Tan {
  return construct<Tan>(m);
}
