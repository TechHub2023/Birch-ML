/**
 * Lazy `copysign`.
 */
final class CopySign(l:Expression<Real>, r:Expression<Real>) <
    ScalarBinaryExpression<Expression<Real>,Expression<Real>,Real>(l, r) {  
  override function doCompute() {
    x <- copysign(global.eval(l!), global.eval(r!));
  }
  
  override function doGrad(gen:Integer) {
    if eval() == global.eval(l!) {
      count_grad(l!, gen, d!);
    } else {
      count_grad(l!, gen, -d!);
    }
    count_grad(r!, gen, 0.0);
  }
}

/**
 * Lazy `copysign`.
 */
function copysign(l:Expression<Real>, r:Expression<Real>) -> CopySign {
  return construct<CopySign>(l, r);
}

/**
 * Lazy `copysign`.
 */
function copysign(l:Real, r:Expression<Real>) -> CopySign {
  return copysign(box(l), r);
}

/**
 * Lazy `copysign`.
 */
function copysign(l:Expression<Real>, r:Real) -> CopySign {
  return copysign(l, box(r));
}
