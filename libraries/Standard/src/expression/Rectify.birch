/**
 * Lazy `rectify`.
 */
final class Rectify(m:Expression<Real>) <
    ScalarUnaryExpression<Expression<Real>,Real>(m) {
  override function doCompute() {
    x <- rectify(global.eval(m!));
  }

  override function doGrad(gen:Integer) {
    if x > 0.0 {
      count_grad(m!, gen, d!);
    } else {
      count_grad(m!, gen, 0.0);
    }
  }
}

/**
 * Lazy `rectify`.
 */
function rectify(m:Expression<Real>) -> Rectify {
  return construct<Rectify>(m);
}
