/**
 * Lazy `abs`.
 */
final class Abs(m:Expression<Real>) <
    ScalarUnaryExpression<Expression<Real>,Real>(m) {
  override function doCompute() {
    x <- abs(global.eval(m!));
  }

  override function doGrad(gen:Integer) {
    if eval() >= 0.0 {
      count_grad(m!, gen, d!);
    } else {
      count_grad(m!, gen, -d!);
    }
  }
}

/**
 * Lazy `abs`.
 */
function abs(m:Expression<Real>) -> Abs {
  return construct<Abs>(m);
}
