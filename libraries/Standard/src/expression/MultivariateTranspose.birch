/**
 * Lazy `transpose`.
 */
final class MultivariateTranspose(m:Expression<Real[_]>) <
    MatrixUnaryExpression<Expression<Real[_]>,Real[_,_]>(m) {
  override function doRows() -> Integer {
    return m!.columns();
  }
  
  override function doColumns() -> Integer {
    return m!.rows();
  }

  override function doCompute() {
    x <- transpose(m!.eval());
  }

  override function doGrad(gen:Integer) {
    m!.countGrad(gen, vec(d!));
  }
}

/**
 * Lazy `transpose`.
 */
function transpose(m:Expression<Real[_]>) -> MultivariateTranspose {
  return construct<MultivariateTranspose>(m);
}
