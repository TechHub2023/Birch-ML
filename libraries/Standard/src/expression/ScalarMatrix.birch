/**
 * Lazy `scalar`.
 */
final class ScalarMatrix<Value>(m:Expression<Value[_,_]>) <
    ScalarUnaryExpression<Expression<Value[_,_]>,Value>(m) {
  override function doCompute() {
    x <- scalar(m!.eval());
  }

  override function doGrad(gen:Integer) {
    m!.countGrad(gen, [[d]]);
  }
}

/**
 * Lazy `scalar`.
 */
function scalar<Value>(m:Expression<Value[_,_]>) -> ScalarMatrix<Value> {
  return construct<ScalarMatrix<Value>>(m);
}
