/**
 * Lazy `sinh`.
 */
final class Sinh(m:Expression<Real>) <
    ScalarUnaryExpression<Expression<Real>,Real>(m) {
  override function doCompute() {
    x <- sinh(m!.eval());
  }

  override function doGrad(gen:Integer) {
    m!.countGrad(gen, d!*cosh(m!.eval()));
  }
}

/**
 * Lazy `sinh`.
 */
function sinh(m:Expression<Real>) -> Sinh {
  return construct<Sinh>(m);
}
