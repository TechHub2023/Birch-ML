/**
 * Single object model.
 *
 * - s: The starting time of the track.
 * - θ: The global parameters.
 */
class Track(s:Integer, θ:Global) < Model {
  /**
   * Starting time of this track.
   */
  s:Integer <- s;

  /**
   * Parameters.
   */
  θ:Global <- θ;

  /**
   * Hidden states.
   */
  x:Tape<Random<Real[_]>>;

  /**
   * Observations.
   */
  y:Tape<Random<Real[_]>>;
  
  function simulate(t:Integer) {
    if t == 1 {
      /* start */
      let μ <- vector(0.0, 3*θ.l.length());
      μ[1..2] <~ Uniform(θ.l, θ.u);
      x[t] ~ Gaussian(μ, θ.M);
    } else {
      /* step */
      x[t] ~ Gaussian(θ.A*x[t - 1], θ.Q);
    }

    d:Boolean;  // is the track detected?
    d <~ Bernoulli(θ.d);
    if d {
      y[t] ~ Gaussian(θ.B*x[t], θ.R);
    }
  }
  
  function write(buffer:Buffer) {
    buffer.set("s", s);
    buffer.set("x", x);
    buffer.set("y", y);
  }
}
