/**
 * Create a simulated data set from simulation output.
 *
 * `--input`: path of an output file from a simulation run, containing the
 * ground truth.
 * `--output`: path to an output file to which to write the simulated data
 * set.
 */
program data(input:String <- "output/simulate.json",
    output:String <- "input/filter.json") {
  /* input */
  let reader <- Reader(input);
  let inputBuffer <- reader.slurp();
  reader.close();
  
  /* read in the simulated observations from the track */
  θ:Global;
  y:RaggedArray<Real[_]>;

  let iter1 <- inputBuffer.walk();
  if iter1.hasNext() {
    let sample <- iter1.next().get("sample");
    if sample? {
      sample!.get("θ", θ);
      sample!.get("y", y);
      let iter2 <- sample!.walk("z");
      while iter2.hasNext() {
        let z <- iter2.next();
        let s <- z.get<Integer>("s")!;
        let iter3 <- z.walk("y");
        while iter3.hasNext() {
          let u <- iter3.next();
          let v <- u.get<Real[_]>();
          if v? {
            y.pushBack(s, v![1..2]);
          }
          s <- s + 1;
        }
      }
    }
  }
  
  /* save the observations to the output file */
  outputBuffer:Buffer;
  outputBuffer.push(θ);
  let iter2 <- y.walk();
  while iter2.hasNext() {
    outputBuffer.push(iter2.next());
  }

  let writer <- Writer(output);
  writer.dump(outputBuffer);
  writer.close();
}
